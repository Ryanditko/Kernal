import { createCommand } from "#base";
import { 
    ApplicationCommandType, 
    ApplicationCommandOptionType,
    EmbedBuilder,
    ChatInputCommandInteraction,
    ActionRowBuilder,
    StringSelectMenuBuilder,
    ComponentType
} from "discord.js";

createCommand({
    name: "help",
    description: "Mostra ajuda completa sobre todos os comandos do Kernal Bot",
    type: ApplicationCommandType.ChatInput,
    options: [
        {
            name: "categoria",
            description: "Categoria espec√≠fica de comandos",
            type: ApplicationCommandOptionType.String,
            required: false,
            choices: [
                {
                    name: "üéµ M√∫sica - Comandos de reprodu√ß√£o",
                    value: "music"
                },
                {
                    name: "üõ°Ô∏è Administra√ß√£o - Comandos de modera√ß√£o",
                    value: "admin"
                },
                {
                    name: "üìä Utilidades - Comandos √∫teis",
                    value: "utility"
                },
                {
                    name: "üéÆ Divers√£o - Comandos de entretenimento",
                    value: "fun"
                }
            ]
        }
    ],
    async run(interaction: ChatInputCommandInteraction): Promise<void> {
        const categoria = interaction.options.getString("categoria");

        if (categoria) {
            // Mostrar categoria espec√≠fica
            await showSpecificCategory(interaction, categoria);
        } else {
            // Mostrar menu principal com seletor
            await showMainHelp(interaction);
        }
    }
});

async function showMainHelp(interaction: ChatInputCommandInteraction): Promise<void> {
    const mainEmbed = new EmbedBuilder()
        .setTitle("ü§ñ Kernal Bot - Central de Ajuda")
        .setDescription("**Bem-vindo ao sistema de ajuda do Kernal Bot!**\n\nEste bot oferece uma ampla gama de funcionalidades para aprimorar sua experi√™ncia no Discord. Escolha uma categoria abaixo para ver os comandos dispon√≠veis.")
        .addFields(
            {
                name: "üéµ Sistema de M√∫sica",
                value: "Sistema completo de reprodu√ß√£o de m√∫sica com suporte a YouTube e Spotify",
                inline: false
            },
            {
                name: "üõ°Ô∏è Administra√ß√£o",
                value: "Ferramentas avan√ßadas de modera√ß√£o e gerenciamento do servidor",
                inline: false
            },
            {
                name: "üìä Utilidades",
                value: "Comandos √∫teis para informa√ß√µes e estat√≠sticas",
                inline: false
            },
            {
                name: "üéÆ Divers√£o",
                value: "Comandos de entretenimento e intera√ß√£o",
                inline: false
            }
        )
        .setColor(0x0099FF)
        .setThumbnail(interaction.client.user?.avatarURL() || null)
        .setFooter({ text: "Use o menu abaixo para navegar pelas categorias" })
        .setTimestamp();

    const selectMenu = new StringSelectMenuBuilder()
        .setCustomId('help_category_select')
        .setPlaceholder('Escolha uma categoria para ver os comandos')
        .addOptions([
            {
                label: 'Sistema de M√∫sica',
                description: 'Comandos de reprodu√ß√£o de m√∫sica',
                value: 'music',
                emoji: 'üéµ'
            },
            {
                label: 'Administra√ß√£o',
                description: 'Comandos de modera√ß√£o',
                value: 'admin',
                emoji: 'üõ°Ô∏è'
            },
            {
                label: 'Utilidades',
                description: 'Comandos √∫teis e informativos',
                value: 'utility',
                emoji: 'üìä'
            },
            {
                label: 'Divers√£o',
                description: 'Comandos de entretenimento',
                value: 'fun',
                emoji: 'üéÆ'
            }
        ]);

    const row = new ActionRowBuilder<StringSelectMenuBuilder>()
        .addComponents(selectMenu);

    const response = await interaction.reply({
        embeds: [mainEmbed],
        components: [row]
    });

    // Collector para o menu de sele√ß√£o
    const collector = response.createMessageComponentCollector({
        componentType: ComponentType.StringSelect,
        time: 300000 // 5 minutos
    });

    collector.on('collect', async (selectInteraction) => {
        if (selectInteraction.user.id !== interaction.user.id) {
            await selectInteraction.reply({
                content: "‚ùå Apenas quem executou o comando pode usar este menu!",
                ephemeral: true
            });
            return;
        }

        const selectedCategory = selectInteraction.values[0];
        await showSpecificCategory(selectInteraction, selectedCategory);
    });

    collector.on('end', async () => {
        try {
            await response.edit({
                components: []
            });
        } catch (error) {
            // Ignore errors when editing expired messages
        }
    });
}

async function showSpecificCategory(interaction: ChatInputCommandInteraction | any, category: string): Promise<void> {
    let embed: EmbedBuilder;

    switch (category) {
        case 'music':
            embed = getMusicHelpEmbed();
            break;
        case 'admin':
            embed = getAdminHelpEmbed();
            break;
        case 'utility':
            embed = getUtilityHelpEmbed();
            break;
        case 'fun':
            embed = getFunHelpEmbed();
            break;
        default:
            embed = new EmbedBuilder()
                .setTitle("‚ùå Categoria n√£o encontrada")
                .setDescription("A categoria solicitada n√£o existe.")
                .setColor(0xFF0000);
    }

    if (interaction.replied || interaction.deferred) {
        await interaction.editReply({
            embeds: [embed],
            components: []
        });
    } else {
        await interaction.reply({
            embeds: [embed]
        });
    }
}

function getMusicHelpEmbed(): EmbedBuilder {
    return new EmbedBuilder()
        .setTitle("üéµ Comandos de M√∫sica")
        .setDescription("**Sistema completo de reprodu√ß√£o de m√∫sica com suporte a YouTube e Spotify**")
        .addFields(
            {
                name: "‚ñ∂Ô∏è Reprodu√ß√£o B√°sica",
                value: "`/play <m√∫sica>` - Toca m√∫sica do YouTube ou Spotify\n`/pause` - Pausa/retoma a reprodu√ß√£o\n`/stop` - Para completamente e desconecta\n`/skip` - Pula para a pr√≥xima m√∫sica\n`/previous` - Volta para a m√∫sica anterior",
                inline: false
            },
            {
                name: "üìã Gerenciamento de Fila",
                value: "`/queue [p√°gina]` - Mostra a fila de m√∫sicas\n`/clear` - Limpa toda a fila\n`/shuffle` - Ativa/desativa modo aleat√≥rio\n`/nowplaying` - Mostra m√∫sica atual",
                inline: false
            },
            {
                name: "üîß Controles Avan√ßados",
                value: "`/volume <0-100>` - Ajusta o volume\n`/loop <modo>` - Repeti√ß√£o (off/song/queue)\n`/repeat <modo>` - Modo repeti√ß√£o alternativo",
                inline: false
            },
            {
                name: "üîç Busca e Informa√ß√µes",
                value: "`/search <termo>` - Busca m√∫sicas no YouTube\n`/lyrics [m√∫sica]` - Letra da m√∫sica\n`/musicinfo` - Info do sistema de m√∫sica",
                inline: false
            },
            {
                name: "üìù Como Usar",
                value: "1Ô∏è‚É£ Entre em um canal de voz\n2Ô∏è‚É£ Use `/play <nome da m√∫sica>`\n3Ô∏è‚É£ O bot conectar√° automaticamente\n4Ô∏è‚É£ Use os outros comandos para controlar",
                inline: false
            },
            {
                name: "üéØ Formatos Aceitos",
                value: "‚Ä¢ Links do YouTube\n‚Ä¢ Links do Spotify (playlists e m√∫sicas)\n‚Ä¢ Busca por texto\n‚Ä¢ Links diretos de √°udio",
                inline: false
            }
        )
        .setColor(0xFF6B6B)
        .setFooter({ text: "Todas as m√∫sicas s√£o transmitidas em alta qualidade" });
}

function getAdminHelpEmbed(): EmbedBuilder {
    return new EmbedBuilder()
        .setTitle("üõ°Ô∏è Comandos de Administra√ß√£o")
        .setDescription("**Ferramentas avan√ßadas para modera√ß√£o e gerenciamento do servidor**")
        .addFields(
            {
                name: "üî® Modera√ß√£o B√°sica",
                value: "`/kick <usu√°rio> [motivo]` - Expulsa um usu√°rio\n`/ban <usu√°rio> [motivo]` - Bane um usu√°rio\n`/unban <id> [motivo]` - Remove ban de usu√°rio\n`/timeout <usu√°rio> <tempo>` - Silencia temporariamente",
                inline: false
            },
            {
                name: "üí¨ Gerenciamento de Mensagens",
                value: "`/clear <quantidade>` - Apaga mensagens\n`/purge <usu√°rio> [quantidade]` - Apaga mensagens de usu√°rio espec√≠fico\n`/announce <canal> <mensagem>` - Faz an√∫ncio",
                inline: false
            },
            {
                name: "üë• Gerenciamento de Usu√°rios",
                value: "`/role add <usu√°rio> <cargo>` - Adiciona cargo\n`/role remove <usu√°rio> <cargo>` - Remove cargo\n`/nickname <usu√°rio> <nome>` - Altera apelido",
                inline: false
            },
            {
                name: "üîß Configura√ß√µes do Servidor",
                value: "`/config <op√ß√£o> <valor>` - Configura√ß√µes gerais\n`/automod <ativar/desativar>` - Auto modera√ß√£o\n`/welcome <canal>` - Define canal de boas-vindas",
                inline: false
            },
            {
                name: "üìä Controle Remoto (Desenvolvedores)",
                value: "`/remote` - Acesso a controles avan√ßados do bot (restrito a administradores autorizados)",
                inline: false
            },
            {
                name: "‚ö†Ô∏è Permiss√µes Necess√°rias",
                value: "‚Ä¢ **Gerenciar Servidor** - Para maioria dos comandos\n‚Ä¢ **Banir Membros** - Para comandos de ban\n‚Ä¢ **Gerenciar Cargos** - Para comandos de cargo\n‚Ä¢ **Gerenciar Mensagens** - Para limpeza",
                inline: false
            }
        )
        .setColor(0x4ECDC4)
        .setFooter({ text: "Use com responsabilidade - a√ß√µes s√£o registradas" });
}

function getUtilityHelpEmbed(): EmbedBuilder {
    return new EmbedBuilder()
        .setTitle("üìä Comandos de Utilidades")
        .setDescription("**Comandos √∫teis para informa√ß√µes e estat√≠sticas**")
        .addFields(
            {
                name: "üìà Informa√ß√µes do Bot",
                value: "`/stats` - Estat√≠sticas completas do bot\n`/ping` - Lat√™ncia do bot\n`/uptime` - Tempo online do bot\n`/botinfo` - Informa√ß√µes detalhadas",
                inline: false
            },
            {
                name: "üè† Informa√ß√µes do Servidor",
                value: "`/serverinfo` - Info completa do servidor\n`/membercount` - Contagem de membros\n`/channelinfo <canal>` - Info de canal espec√≠fico",
                inline: false
            },
            {
                name: "üë§ Informa√ß√µes de Usu√°rio",
                value: "`/userinfo [usu√°rio]` - Perfil de usu√°rio\n`/avatar [usu√°rio]` - Avatar em alta resolu√ß√£o\n`/whois <usu√°rio>` - Info detalhada de membro",
                inline: false
            },
            {
                name: "üîß Ferramentas √öteis",
                value: "`/calculate <express√£o>` - Calculadora\n`/remind <tempo> <mensagem>` - Lembrete\n`/translate <idioma> <texto>` - Tradutor",
                inline: false
            },
            {
                name: "üåê Informa√ß√µes Externas",
                value: "`/weather <cidade>` - Clima da cidade\n`/crypto <moeda>` - Pre√ßo de criptomoeda\n`/github <repo>` - Info de reposit√≥rio",
                inline: false
            },
            {
                name: "üìù Outros Utilit√°rios",
                value: "`/help` - Este menu de ajuda\n`/invite` - Link de convite do bot\n`/support` - Servidor de suporte",
                inline: false
            }
        )
        .setColor(0x45B7D1)
        .setFooter({ text: "Comandos √∫teis para o dia a dia" });
}

function getFunHelpEmbed(): EmbedBuilder {
    return new EmbedBuilder()
        .setTitle("üéÆ Comandos de Divers√£o")
        .setDescription("**Comandos de entretenimento e intera√ß√£o social**")
        .addFields(
            {
                name: "üé≤ Jogos e Sorteios",
                value: "`/roll <lados>` - Rola um dado\n`/coin` - Cara ou coroa\n`/8ball <pergunta>` - Bola 8 m√°gica\n`/choose <op√ß√µes>` - Escolhe uma op√ß√£o",
                inline: false
            },
            {
                name: "üíï Intera√ß√£o Social",
                value: "`/hug <usu√°rio>` - Abra√ßa algu√©m\n`/pat <usu√°rio>` - Faz carinho\n`/highfive <usu√°rio>` - Cumprimenta\n`/kiss <usu√°rio>` - Beija algu√©m",
                inline: false
            },
            {
                name: "üòÇ Memes e Imagens",
                value: "`/meme` - Meme aleat√≥rio\n`/cat` - Foto de gato\n`/dog` - Foto de cachorro\n`/gif <termo>` - GIF animado",
                inline: false
            },
            {
                name: "üèÜ Rankings e Competi√ß√µes",
                value: "`/leaderboard` - Ranking do servidor\n`/level [usu√°rio]` - N√≠vel de XP\n`/daily` - Recompensa di√°ria\n`/compete <usu√°rio>` - Desafio",
                inline: false
            },
            {
                name: "üéØ Jogos Interativos",
                value: "`/trivia` - Quiz de perguntas\n`/wordle` - Jogo Wordle\n`/hangman` - Jogo da forca\n`/riddle` - Charadas",
                inline: false
            },
            {
                name: "‚ú® Geradores Divertidos",
                value: "`/quote` - Cita√ß√£o inspiradora\n`/joke` - Piada aleat√≥ria\n`/fact` - Fato curioso\n`/roast <usu√°rio>` - Zoeira amig√°vel",
                inline: false
            }
        )
        .setColor(0xF39C12)
        .setFooter({ text: "Divirta-se com responsabilidade!" });
}
